'use strict';

var index = require('../../index-f1efd858.js');

/* src/routes/blog/Blog.svelte generated by Svelte v3.29.7 */

const css = {
	code: "h1.svelte-us1mwi{margin-bottom:10px}.title.svelte-us1mwi{margin-top:1rem;margin-bottom:1rem;padding-bottom:1rem;border-bottom:1px solid #ddd}h2{margin-top:2rem}pre{background:#eee;padding:1rem;border-radius:1rem}blockquote{margin:0;background:#ddd;padding:3px 1.5rem 3px 3rem;position:relative;border-radius:1rem}blockquote:after{content:'>';color:#aaa;font-size:30px;position:absolute;top:33%;left:1rem}blockquote p{padding:0}",
	map: "{\"version\":3,\"file\":\"Blog.svelte\",\"sources\":[\"Blog.svelte\"],\"sourcesContent\":[\"<script>\\n  export let data; // data is mainly being populated from the /plugins/edlerjs-plugin-markdown/index.js\\n  const { html, frontmatter } = data;\\n</script>\\n\\n<style>\\n  h1 {\\n    margin-bottom: 10px;\\n  }\\n\\n  .title {\\n    margin-top: 1rem;\\n    margin-bottom: 1rem;\\n    padding-bottom: 1rem;\\n    border-bottom: 1px solid #ddd;\\n  }\\n\\n  :global(h2) {\\n    margin-top: 2rem;\\n  }\\n\\n  :global(pre) {\\n    background: #eee;\\n    padding: 1rem;\\n    border-radius: 1rem;\\n  }\\n\\n  :global(blockquote) {\\n    margin: 0;\\n    background: #ddd;\\n    padding: 3px 1.5rem 3px 3rem;\\n    position: relative;\\n    border-radius: 1rem;\\n  }\\n  :global(blockquote:after) {\\n    content: '>';\\n    color: #aaa;\\n    font-size: 30px;\\n    position: absolute;\\n    top: 33%;\\n    left: 1rem;\\n  }\\n\\n  :global(blockquote p) {\\n    padding: 0;\\n  }\\n/*# sourceMappingURL=src/routes/blog/Blog.svelte.map */</style>\\n\\n<svelte:head>\\n  <title>{frontmatter.title}</title>\\n</svelte:head>\\n<a href=\\\"/\\\">&LeftArrow; Home</a>\\n\\n<div class=\\\"title\\\">\\n  <h1>{frontmatter.title}</h1>\\n  {#if frontmatter.author}<small>By {frontmatter.author}</small>{/if}\\n</div>\\n\\n{#if html}\\n  {@html html}\\n{:else}\\n  <h1>Oops!! Markdown not found!</h1>\\n{/if}\\n\"],\"names\":[],\"mappings\":\"AAME,EAAE,cAAC,CAAC,AACF,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,IAAI,CACpB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAEO,EAAE,AAAE,CAAC,AACX,UAAU,CAAE,IAAI,AAClB,CAAC,AAEO,GAAG,AAAE,CAAC,AACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AAEO,UAAU,AAAE,CAAC,AACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAC5B,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,IAAI,AACrB,CAAC,AACO,gBAAgB,AAAE,CAAC,AACzB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,IAAI,AACZ,CAAC,AAEO,YAAY,AAAE,CAAC,AACrB,OAAO,CAAE,CAAC,AACZ,CAAC\"}"
};

const Blog = index.create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { data } = $$props; // data is mainly being populated from the /plugins/edlerjs-plugin-markdown/index.js
	const { html, frontmatter } = data;
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	$$result.css.add(css);

	return `${($$result.head += `${($$result.title = `<title>${index.escape(frontmatter.title)}</title>`, "")}`, "")}
<a href="${"/"}">‚Üê Home</a>

<div class="${"title svelte-us1mwi"}"><h1 class="${"svelte-us1mwi"}">${index.escape(frontmatter.title)}</h1>
  ${frontmatter.author
	? `<small>By ${index.escape(frontmatter.author)}</small>`
	: ``}</div>

${html
	? `${html}`
	: `<h1 class="${"svelte-us1mwi"}">Oops!! Markdown not found!</h1>`}`;
});

module.exports = Blog;
module.exports._css = "h1.svelte-us1mwi{margin-bottom:10px}.title.svelte-us1mwi{margin-top:1rem;margin-bottom:1rem;padding-bottom:1rem;border-bottom:1px solid #ddd}h2{margin-top:2rem}pre{background:#eee;padding:1rem;border-radius:1rem}blockquote{margin:0;background:#ddd;padding:3px 1.5rem 3px 3rem;position:relative;border-radius:1rem}blockquote:after{content:'\u003E';color:#aaa;font-size:30px;position:absolute;top:33%;left:1rem}blockquote p{padding:0}";
module.exports._cssMap = "\u002F*# sourceMappingURL=data:application\u002Fjson;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9CbG9nLnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSxpQkFBRSxjQUNhLEtBR1gscUJBQUUsV0FDTSxLQUNaLGNBQWUsS0FDZixlQUFnQixLQUNoQixjQUFlLElBQUksTUFBTSxLQUMxQixHQUVZLFdBQ0MsS0FDYixJQUVhLFdBQ0EsS0FDWixRQUFTLEtBQ1QsY0FBZSxLQUNoQixXQUVvQixPQUNYLEVBQ1IsV0FBWSxLQUNaLFFBQVMsSUFBSSxPQUFPLElBQUksS0FDeEIsU0FBVSxTQUNWLGNBQWUsS0FDaEIsaUJBQzBCLFFBQ2hCLElBQ1QsTUFBTyxLQUNQLFVBQVcsS0FDWCxTQUFVLFNBQ1YsSUFBSyxJQUNMLEtBQU0sS0FDUCxhQUVzQixRQUNaIiwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgZXhwb3J0IGxldCBkYXRhOyAvLyBkYXRhIGlzIG1haW5seSBiZWluZyBwb3B1bGF0ZWQgZnJvbSB0aGUgL3BsdWdpbnMvZWRsZXJqcy1wbHVnaW4tbWFya2Rvd24vaW5kZXguanNcbiAgY29uc3QgeyBodG1sLCBmcm9udG1hdHRlciB9ID0gZGF0YTtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIGgxIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG5cbiAgLnRpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDFyZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cblxuICA6Z2xvYmFsKGgyKSB7XG4gICAgbWFyZ2luLXRvcDogMnJlbTtcbiAgfVxuXG4gIDpnbG9iYWwocHJlKSB7XG4gICAgYmFja2dyb3VuZDogI2VlZTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gIH1cblxuICA6Z2xvYmFsKGJsb2NrcXVvdGUpIHtcbiAgICBtYXJnaW46IDA7XG4gICAgYmFja2dyb3VuZDogI2RkZDtcbiAgICBwYWRkaW5nOiAzcHggMS41cmVtIDNweCAzcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICB9XG4gIDpnbG9iYWwoYmxvY2txdW90ZTphZnRlcikge1xuICAgIGNvbnRlbnQ6ICc+JztcbiAgICBjb2xvcjogI2FhYTtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzMlO1xuICAgIGxlZnQ6IDFyZW07XG4gIH1cblxuICA6Z2xvYmFsKGJsb2NrcXVvdGUgcCkge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXNyYy9yb3V0ZXMvYmxvZy9CbG9nLnN2ZWx0ZS5tYXAgKi88L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57ZnJvbnRtYXR0ZXIudGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48YSBocmVmPVwiL1wiPiZMZWZ0QXJyb3c7IEhvbWU8L2E+XG5cbjxkaXYgY2xhc3M9XCJ0aXRsZVwiPlxuICA8aDE+e2Zyb250bWF0dGVyLnRpdGxlfTwvaDE+XG4gIHsjaWYgZnJvbnRtYXR0ZXIuYXV0aG9yfTxzbWFsbD5CeSB7ZnJvbnRtYXR0ZXIuYXV0aG9yfTwvc21hbGw+ey9pZn1cbjwvZGl2PlxuXG57I2lmIGh0bWx9XG4gIHtAaHRtbCBodG1sfVxuezplbHNlfVxuICA8aDE+T29wcyEhIE1hcmtkb3duIG5vdCBmb3VuZCE8L2gxPlxuey9pZn1cbiJdfQ== *\u002F";
module.exports._cssIncluded = ["src/routes/blog/Blog.svelte"]
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmxvZy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JvdXRlcy9ibG9nL0Jsb2cuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgZGF0YTsgLy8gZGF0YSBpcyBtYWlubHkgYmVpbmcgcG9wdWxhdGVkIGZyb20gdGhlIC9wbHVnaW5zL2VkbGVyanMtcGx1Z2luLW1hcmtkb3duL2luZGV4LmpzXG4gIGNvbnN0IHsgaHRtbCwgZnJvbnRtYXR0ZXIgfSA9IGRhdGE7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICBoMSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC50aXRsZSB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICB9XG5cbiAgOmdsb2JhbChoMikge1xuICAgIG1hcmdpbi10b3A6IDJyZW07XG4gIH1cblxuICA6Z2xvYmFsKHByZSkge1xuICAgIGJhY2tncm91bmQ6ICNlZWU7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICB9XG5cbiAgOmdsb2JhbChibG9ja3F1b3RlKSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJhY2tncm91bmQ6ICNkZGQ7XG4gICAgcGFkZGluZzogM3B4IDEuNXJlbSAzcHggM3JlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgfVxuICA6Z2xvYmFsKGJsb2NrcXVvdGU6YWZ0ZXIpIHtcbiAgICBjb250ZW50OiAnPic7XG4gICAgY29sb3I6ICNhYWE7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDMzJTtcbiAgICBsZWZ0OiAxcmVtO1xuICB9XG5cbiAgOmdsb2JhbChibG9ja3F1b3RlIHApIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57ZnJvbnRtYXR0ZXIudGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48YSBocmVmPVwiL1wiPiZMZWZ0QXJyb3c7IEhvbWU8L2E+XG5cbjxkaXYgY2xhc3M9XCJ0aXRsZVwiPlxuICA8aDE+e2Zyb250bWF0dGVyLnRpdGxlfTwvaDE+XG4gIHsjaWYgZnJvbnRtYXR0ZXIuYXV0aG9yfTxzbWFsbD5CeSB7ZnJvbnRtYXR0ZXIuYXV0aG9yfTwvc21hbGw+ey9pZn1cbjwvZGl2PlxuXG57I2lmIGh0bWx9XG4gIHtAaHRtbCBodG1sfVxuezplbHNlfVxuICA8aDE+T29wcyEhIE1hcmtkb3duIG5vdCBmb3VuZCE8L2gxPlxuey9pZn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7T0FDYSxJQUFJO1NBQ1AsSUFBSSxFQUFFLFdBQVcsS0FBSyxJQUFJOzs7O3lFQStDMUIsV0FBVyxDQUFDLEtBQUs7OztvRkFLcEIsV0FBVyxDQUFDLEtBQUs7SUFDakIsV0FBVyxDQUFDLE1BQU07NkJBQVksV0FBVyxDQUFDLE1BQU07OztFQUdsRCxJQUFJO01BQ0EsSUFBSTs7Ozs7OyJ9
