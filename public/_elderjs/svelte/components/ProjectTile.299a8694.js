import { e as element, k as space, t as text, c as claim_element, a as children, l as claim_space, b as claim_text, d as detach_dev, f as attr_dev, g as add_location, i as insert_dev, h as append_dev, s as set_data_dev, n as noop, j as dispatch_dev, o as validate_slots, S as SvelteComponentDev, p as init, q as safe_not_equal } from '../index-be414bb5.js';

/* src/components/ProjectTile.svelte generated by Svelte v3.35.0 */

const file = "src/components/ProjectTile.svelte";

function create_fragment(ctx) {
	let div1;
	let a;
	let img;
	let img_src_value;
	let img_alt_value;
	let t0;
	let div0;
	let strong;
	let t1_value = /*project*/ ctx[0].frontmatter.title + "";
	let t1;
	let t2;
	let t3_value = /*project*/ ctx[0].frontmatter.type + "";
	let t3;

	const block = {
		c: function create() {
			div1 = element("div");
			a = element("a");
			img = element("img");
			t0 = space();
			div0 = element("div");
			strong = element("strong");
			t1 = text(t1_value);
			t2 = space();
			t3 = text(t3_value);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			a = claim_element(div1_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			img = claim_element(a_nodes, "IMG", { src: true, alt: true, class: true });
			t0 = claim_space(a_nodes);
			div0 = claim_element(a_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			strong = claim_element(div0_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t1 = claim_text(strong_nodes, t1_value);
			strong_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			t3 = claim_text(div0_nodes, t3_value);
			div0_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*project*/ ctx[0].frontmatter.logo)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = "" + (/*project*/ ctx[0].frontmatter.title + " project thumbnail"));
			attr_dev(img, "class", "thumbnail");
			add_location(img, file, 9, 4, 220);
			add_location(strong, file, 15, 6, 398);
			attr_dev(div0, "class", "ui-overlay -fallback");
			add_location(div0, file, 14, 4, 357);
			attr_dev(a, "href", /*link*/ ctx[1]);
			attr_dev(a, "class", "link");
			add_location(a, file, 8, 2, 185);
			attr_dev(div1, "class", "project");
			add_location(div1, file, 7, 0, 161);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, a);
			append_dev(a, img);
			append_dev(a, t0);
			append_dev(a, div0);
			append_dev(div0, strong);
			append_dev(strong, t1);
			append_dev(div0, t2);
			append_dev(div0, t3);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*project*/ 1 && img.src !== (img_src_value = /*project*/ ctx[0].frontmatter.logo)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*project*/ 1 && img_alt_value !== (img_alt_value = "" + (/*project*/ ctx[0].frontmatter.title + " project thumbnail"))) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (dirty & /*project*/ 1 && t1_value !== (t1_value = /*project*/ ctx[0].frontmatter.title + "")) set_data_dev(t1, t1_value);
			if (dirty & /*project*/ 1 && t3_value !== (t3_value = /*project*/ ctx[0].frontmatter.type + "")) set_data_dev(t3, t3_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("ProjectTile", slots, []);
	let { project } = $$props;

	let link = project.frontmatter.externalLink
	? project.frontmatter.externalLink
	: `/project/${project.slug}`;

	const writable_props = ["project"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProjectTile> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("project" in $$props) $$invalidate(0, project = $$props.project);
	};

	$$self.$capture_state = () => ({ project, link });

	$$self.$inject_state = $$props => {
		if ("project" in $$props) $$invalidate(0, project = $$props.project);
		if ("link" in $$props) $$invalidate(1, link = $$props.link);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [project, link];
}

class ProjectTile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { project: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProjectTile",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*project*/ ctx[0] === undefined && !("project" in props)) {
			console.warn("<ProjectTile> was created without expected prop 'project'");
		}
	}

	get project() {
		throw new Error("<ProjectTile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set project(value) {
		throw new Error("<ProjectTile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default ProjectTile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvamVjdFRpbGUuMjk5YTg2OTQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1Byb2plY3RUaWxlLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBleHBvcnQgbGV0IHByb2plY3Q7XG4gIGxldCBsaW5rID0gcHJvamVjdC5mcm9udG1hdHRlci5leHRlcm5hbExpbmtcbiAgICA/IHByb2plY3QuZnJvbnRtYXR0ZXIuZXh0ZXJuYWxMaW5rXG4gICAgOiBgL3Byb2plY3QvJHtwcm9qZWN0LnNsdWd9YDtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwicHJvamVjdFwiPlxuICA8YSBocmVmPVwie2xpbmt9XCIgY2xhc3M9XCJsaW5rXCI+XG4gICAgPGltZ1xuICAgICAgc3JjPVwie3Byb2plY3QuZnJvbnRtYXR0ZXIubG9nb31cIlxuICAgICAgYWx0PVwie3Byb2plY3QuZnJvbnRtYXR0ZXIudGl0bGV9IHByb2plY3QgdGh1bWJuYWlsXCJcbiAgICAgIGNsYXNzPVwidGh1bWJuYWlsXCJcbiAgICAvPlxuICAgIDxkaXYgY2xhc3M9XCJ1aS1vdmVybGF5IC1mYWxsYmFja1wiPlxuICAgICAgPHN0cm9uZz57cHJvamVjdC5mcm9udG1hdHRlci50aXRsZX08L3N0cm9uZz5cbiAgICAgIHtwcm9qZWN0LmZyb250bWF0dGVyLnR5cGV9XG4gICAgPC9kaXY+XG4gIDwvYT5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs0QkFlZSxHQUFPLElBQUMsV0FBVyxDQUFDLEtBQUs7Ozs0QkFDakMsR0FBTyxJQUFDLFdBQVcsQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQU5uQixHQUFPLElBQUMsV0FBVyxDQUFDLElBQUk7MERBQ3hCLEdBQU8sSUFBQyxXQUFXLENBQUMsS0FBSzs7Ozs7O2dDQUh6QixHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7eUVBRUosR0FBTyxJQUFDLFdBQVcsQ0FBQyxJQUFJOzs7O3FGQUN4QixHQUFPLElBQUMsV0FBVyxDQUFDLEtBQUs7Ozs7cUVBSXRCLEdBQU8sSUFBQyxXQUFXLENBQUMsS0FBSztxRUFDakMsR0FBTyxJQUFDLFdBQVcsQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQWZsQixPQUFPOztLQUNkLElBQUksR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQUE7R0FDM0IsT0FBTyxDQUFDLFdBQVcsQ0FBQyxZQUFBO2VBQ1IsT0FBTyxDQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
